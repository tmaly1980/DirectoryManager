
# Macro definitions:
#
# ${gidNum} : The next available Group ID Number in the database
#
#

# Default values (for adding):
#
# See the add page html source code (or below) for the internal names of each field.
# The values MUST have the syntax:
# internalFieldName=>['value1',...],
#
$DEFAULT =
{
    gidNumber=>['${gidNum}'],
};

###########################################
#### DO NOT EDIT BELOW THIS LINE!!!!! #####
###########################################



{
	TAB=>1,
      HEADER_KEY=>"cn",
	PRIMARY_KEY=>"cn",
	OBJECT_CLASS=>"posixGroup",
	OU=>"Groups",
	DISPLAY_TITLE=>"Groups",
	EDIT_TITLE=>"Group Editor",
	CLASSES=>[qw/top posixGroup/],
	OPTIONAL_CLASSES=>
	{
	  sambaGroupMapping=>
	  {
	    ATTRS=>
	    [qw(
	      sambaSID
	      sambaGroupType
	      displayName
	      sambaSIDList
	    )],
	  },
	},
	ENTRY_TYPES=>
	[
	  unix=>
	  {
	    NAME=>"UNIX Group",
	    CLASSES=>[qw(top posixGroup)],
	    EVAL=>"'#UNIX#'",
	    SECTIONS=>[qw(general members)],
	  },
	  samba3=>
	  {
	    NAME=>"UNIX + Samba 3 Group",
	    CLASSES=>[qw(top posixGroup sambaGroupMapping)],
	    EVAL=>"'#SAMBA3#' or '#SAMBA32#'",
	    SECTIONS=>[qw(general members)],
	  },

	],
	SEARCH_FIELDS=>
	[
	  cn=>"Group Name",
	  memberUid=>"Group Member",
	],
	HEADER=>
	[
	  cn=>"Group Name",
	  gidNumber=>"Group ID#",
	  memberUid=>"Group Member(s)",
	  description=>"Description",
	],
	SECTIONS=>
	[
	  {
	    NAME=>"General Information",
	    ABBREV=>"general",
	    WRITE=>[qw(ADMIN)],
	    COLUMNS=>
	    [
	      "cn", "description",
	      "gidNumber", undef,
	    ],
	  },
	  {
	    NAME=>"Members",
	    ABBREV=>"members",
	    WRITE=>[qw(ADMIN MODERATOR)],
	    COLUMNS=>
	    [
	      "memberUid", undef
	    ],

	  },

	],

	CROSS_REFERENCE_VIEW=>
	{
	  memberUid=>
	  {
	    TEXT=>"View",
	    OC=>"user",
	    FIELD=>"uid",
	  },

	},

	REQUIRED=>
	[qw(
	  cn gidNumber
	)],

	SEARCH=>
	[qw(
	  cn memberUid description
	)],

	ADMIN_EDIT=>
	[qw(
	  cn gidNumber memberUid description
	)],

	REQUESTOR_EDIT=>
	$CONF->{GROUP_REQUESTOR_EDIT},

	VIEW=>
	[qw(
	  cn gidNumber memberUid description
	)],

	MULTIPLE=>[qw(memberUid)],
	PSEUDO_FIELDS=>
	[qw(sambaGroupType sambaSID displayName)],

	IMPORT_FORMATS=>
	[
	  {
	    NAME=>"/etc/group",
	    ABBREV=>"group",
	    COLS=>
	    [qw(
	      cn userPassword gidNumber memberUid
	    )],
	    MULTIPLE=> # lists, with delimiter specified, or if 1 defaults to comma ','
	    {
	      memberUid=>',',
	    },
	  },

	],

};
